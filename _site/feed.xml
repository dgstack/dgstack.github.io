<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DGStack.com</title>
    <description>This blog is about computer programming tips, trick and some short tutorials, some short tutorial and gettings started post about the framework, libriay, api and much more. The blog target mostly open source stuff like java, j2ee, nodeJs, angularJs, spring, struts, mongodb, mean, etc</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 07 Nov 2016 13:23:41 +0530</pubDate>
    <lastBuildDate>Mon, 07 Nov 2016 13:23:41 +0530</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>Blog: Increase JVM Size In WebSphere Application Server (WAS)</title>
        <description>&lt;h4 id=&quot;how-to-increase-jvm-memory-size-in-websphere-application-server-was&quot;&gt;How to increase JVM Memory Size in WebSphere Application Server (WAS).&lt;/h4&gt;

&lt;p&gt;Server getting very slow and hanging up a lot sometime ending up by “java.lang.OutOfMemory” error frequently while deploying or republishing J2EE Web application in WebSphere Application Server.&lt;/p&gt;

&lt;p&gt;Today, I’ll telling how to set initial heap size and maximum heap size of JVM. that can solve these issues So to do so start your WAS first. then After the server has been started run the admin console from the IDE I am using IBM RSA(Rational Software Architect for WebSphere) you could be use whatever you like.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Or the other way is, in your web browser open &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:9060/ibm/console/&lt;/code&gt;  9060 is the default port for WAS WebConsole.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-JkO-F0UjzYw/VOWtbuFtuPI/AAAAAAAAAcs/uQM_5vLNId4/s1600/1.JPG&quot; alt=&quot;Open  this URL in web browser&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In WAS web console in left side in navigation menu, click on “Server -&amp;gt; Server Types -&amp;gt; webSphere application servers”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-30xI5bMslR0/VOWte4iOhfI/AAAAAAAAAc4/qHJRqyjTg1o/s1600/2.JPG&quot; alt=&quot;Click On Circled link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then click on the server your chose, in my there is only one server1&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-pzVP7uoXCRs/VOWte4JS5OI/AAAAAAAAAc0/QVAL_DyTeck/s1600/3.JPG&quot; alt=&quot;Click On Circled link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In there under Server Infrastructure click on “Java and Process Management -&amp;gt; Process definition”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-jNUbquEaMT4/VOWte3CmObI/AAAAAAAAAc8/iiUoOLB4rdo/s1600/4.JPG&quot; alt=&quot;Click On Circled link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In there under Additional Properties click on “Java Virtual Machine”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-pmJcr34HFdU/VOWtf4vrUWI/AAAAAAAAAdY/Qh_lbaHNRow/s1600/5.JPG&quot; alt=&quot;Click On Circled link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here you can set Initial heap size and similarly Maximum heap size in MB(megabyte). And click on apply.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-ZVV1SvUWI3Q/VOWtgKFYJyI/AAAAAAAAAdI/tw-5Eu_mvCY/s1600/6.JPG&quot; alt=&quot;Click On Circled link&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then click on the save button to save the setting. Then restart the server and enjoy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-a6xS82OC99o/VOWtgAGU99I/AAAAAAAAAdM/AzHmtrDWHPc/s1600/7.JPG&quot; alt=&quot;Click On Circled link&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 06 Nov 2016 05:30:00 +0530</pubDate>
        <link>http://localhost:4000/blog/ops/Increase-JVM-Size-In-WebSphere-Application-Server</link>
        <guid isPermaLink="true">http://localhost:4000/blog/ops/Increase-JVM-Size-In-WebSphere-Application-Server</guid>
        
        <category>Java</category>
        
        <category>IBM</category>
        
        <category>Config</category>
        
        
        <category>blog</category>
        
        <category>Ops</category>
        
      </item>
    
      <item>
        <title>Blog: Web Service Jargon (JAX-WS)</title>
        <description>&lt;p&gt;Web Service is web app which offer intersystem commutation between one electronic device to another electronic device over World Wide Web by using HTTP (Hyper Text Transfer Protocol). Web Service can be written in enterprise and high level language like Java and C#. And other hand client of this web service could be  embedded program written in C or any other embedded language of your house hold refrigerator connected to internet.&lt;/p&gt;

&lt;p&gt;Web services may use &lt;strong&gt;SOAP&lt;/strong&gt; over &lt;strong&gt;HTTP&lt;/strong&gt; protocol, allowing less costly interactions over the Internet than via proprietary solutions like &lt;strong&gt;EDI/B2B&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Java API for XML Web Services (JAX-WS) is a Java programming language API for creating web services, particularly SOAP services. JAX-WS is one of the Java XML programming APIs. It is part of the Java EE platform.&lt;!--more--&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Jargon&lt;/strong&gt; are special words or expressions used by a professional or group that are difficult for others to understand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;div class=&quot;toc&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#web-service-jargon-jax-ws&quot;&gt;Web Service Jargon (JAX-WS)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#wsdl&quot;&gt;WSDL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#uddi&quot;&gt;UDDI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#soap&quot;&gt;SOAP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sei&quot;&gt;SEI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&quot;wsdl&quot;&gt;WSDL&lt;/h2&gt;
&lt;p&gt;WSDL stand for &lt;strong&gt;W&lt;/strong&gt;eb &lt;strong&gt;S&lt;/strong&gt;ervice &lt;strong&gt;D&lt;/strong&gt;efination &lt;strong&gt;L&lt;/strong&gt;anguage. This is an XML Document which act as an interface for the signature of web method. This signature is the contract for the API to be consumed by the Client.
This wsdl is generally parsed by client programs to build a proxy interface or stub to call the web service like regular method in the native client language.&lt;/p&gt;

&lt;p&gt;In Java &lt;strong&gt;JAXB&lt;/strong&gt; is commonly used to generate proxy class or stub. &lt;strong&gt;wsgen.exe&lt;/strong&gt;, a utility you get along with JDK.&lt;/p&gt;

&lt;h2 id=&quot;uddi&quot;&gt;UDDI&lt;/h2&gt;
&lt;p&gt;UDDI stand for &lt;strong&gt;U&lt;/strong&gt;niversal &lt;strong&gt;D&lt;/strong&gt;escription, &lt;strong&gt;D&lt;/strong&gt;iscovery and &lt;strong&gt;I&lt;/strong&gt;ntegration. is a platform-independent, Extensible Markup Language protocol that includes a (XML-based) registry by which businesses worldwide can list themselves on the Internet, and a mechanism to register and locate web service applications. UDDI is an open industry initiative, sponsored by the Organization for the Advancement of Structured Information Standards (OASIS), for enabling businesses to publish service listings and discover each other, and to define how the services or software applications interact over the Internet.&lt;/p&gt;

&lt;p&gt;UDDI was originally proposed as a core Web service standard. It is designed to be interrogated by SOAP messages and to provide access to Web Services Description Language (WSDL) documents describing the protocol bindings and message formats required to interact with the web services listed in its directory.&lt;/p&gt;

&lt;p&gt;In short UDDI is an XML-based standard for describing, publishing, and finding web services. &lt;em&gt;Like Yellow Pages of Web Services&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;soap&quot;&gt;SOAP&lt;/h2&gt;
&lt;p&gt;SOAP stand for &lt;strong&gt;S&lt;/strong&gt;imple &lt;strong&gt;O&lt;/strong&gt;bject &lt;strong&gt;A&lt;/strong&gt;ccess &lt;strong&gt;P&lt;/strong&gt;rotocol. It’s a protocol by which we can access an object created in one technology by other technology over world wide web and is simple to do so.&lt;/p&gt;

&lt;p&gt;SOAP enables communication between two applications via arguments and returned value. These two application could be written in two different languages or they can be server side applications or client side applications.The communication of the passing argument or getting returned value between two application witten in different language and technologies like server app and client app. As we know  web service provide the interpotablity among different technologies we can simply pass java string object to a C++ app. To handle this problem we choose a common and uniform format that can be used by both the client and server to communicate. XML is the format which is used by server and client and the set of standard protocols followed by both with XML format is called Simple Object Access Protocol.&lt;/p&gt;

&lt;p&gt;In short SOAP (Simple Object Access Protocol) is a protocol specification for exchanging structured information in the implementation of web services in computer networks.&lt;/p&gt;

&lt;h2 id=&quot;sei&quot;&gt;SEI&lt;/h2&gt;

&lt;p&gt;SEI stand for &lt;strong&gt;S&lt;/strong&gt;ervice &lt;strong&gt;E&lt;/strong&gt;ndpoint &lt;strong&gt;I&lt;/strong&gt;nterface. As we know that SOAP is a communication layer in web service. Our code call or method call is to be transformed into a soap message. SEI is used to convert our method on client proxy or stub to a soap message in XML format and deliver it to the server.&lt;/p&gt;

&lt;p&gt;In short  a soap based web service can be implemented as a single java class. An endpoint interface, also known as a service endpoint interface (SEI), is a term used in Java Platform, Enterprise Edition.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note : Every programming language or technology has it own native SEI to provide easy access to web service and make developer free of converting the method call to soap message.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So that’s all for web service jargon. Do comment and share the post.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Sep 2016 22:24:46 +0530</pubDate>
        <link>http://localhost:4000/2016/09/17/Web-Service-Jargon-JAXWS/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/09/17/Web-Service-Jargon-JAXWS/</guid>
        
        <category>JAXB</category>
        
        <category>Java</category>
        
        <category>JAX-WS</category>
        
        <category>Web Service</category>
        
        
        <category>blog</category>
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>Blog: Spring Annotations</title>
        <description>&lt;p&gt;The Spring Framework provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform. A key element of Spring is infrastructural support at the application level: Spring focuses on the “plumbing” of enterprise applications so that teams can focus on application-level business logic, without unnecessary ties to specific deployment environments.&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Dependency Injection&lt;/li&gt;
  &lt;li&gt;Aspect-Oriented Programming including Spring’s declarative transaction management&lt;/li&gt;
  &lt;li&gt;Spring MVC web application and RESTful web service framework-&lt;/li&gt;
  &lt;li&gt;Foundational support for JDBC, JPA, JMS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Spring app is generally configured by XML based file but with release of spring 2.5 we saw the introduction of annotation in spring framework. Now spring app can be configured by annotation, no need to have a spring-context.xml (the XML file used by bean factory for initialisation of beans). &lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;These spring annotations is category as follows&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Core Spring Annotations
    &lt;ul&gt;
      &lt;li&gt;Context Configuration Annotations&lt;/li&gt;
      &lt;li&gt;Stereotyping Annotations&lt;/li&gt;
      &lt;li&gt;Spring MVC Annotations&lt;/li&gt;
      &lt;li&gt;Transaction Annotations&lt;/li&gt;
      &lt;li&gt;JMX Annotations&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Aspect Annotations&lt;/li&gt;
  &lt;li&gt;JSR-250 Annotations&lt;/li&gt;
  &lt;li&gt;Testing Annotations&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;core-spring-annotations&quot;&gt;Core Spring Annotations&lt;/h3&gt;
&lt;p&gt;These annotations are used by Spring to guide creation and injection of beans, stereotype classes with regard to the application tier that they belong to. Spring 2.5 makes it easier to create Spring MVC applications with minimal XML configuration and without extending one of the many implementations of the Controller interface.&lt;/p&gt;

&lt;h4 id=&quot;context-configuration-annotations-table&quot;&gt;Context Configuration Annotations [Table]&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Application&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@Autowired&lt;/td&gt;
      &lt;td&gt;Marks a constructor, field, setter method or config method as to be autowired by Spring’s dependency injection facilities.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Configurable&lt;/td&gt;
      &lt;td&gt;Marks a class as being eligible for Spring-driven configuration.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Order&lt;/td&gt;
      &lt;td&gt;Defines ordering, as an alternative to implementing the &lt;code class=&quot;highlighter-rouge&quot;&gt;org.springframework.core.Ordered&lt;/code&gt; interface.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Qualifier&lt;/td&gt;
      &lt;td&gt;Guides autowiring to be performed by means other than by type.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Required&lt;/td&gt;
      &lt;td&gt;Marks a method (typically a JavaBean setter method) as being ‘required’: that is, the setter method must be configured to be dependency-injected with a value.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Scope&lt;/td&gt;
      &lt;td&gt;When used as a type-level annotation in conjunction with @Component, @Scope indicates the name of a scope to use for instances of the annotated type. When used as a method-level annotation in conjunction with @Bean, @Scope indicates the name of a scope to use for the instance returned from the method.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;stereotyping-annotations-table&quot;&gt;Stereotyping Annotations [Table]&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Application&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@Component&lt;/td&gt;
      &lt;td&gt;Indicates that an annotated class is a “component”. Such classes are considered as candidates for auto-detection when using annotation-based configuration and classpath scanning.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Controller&lt;/td&gt;
      &lt;td&gt;Stereotypes a component as a Spring MVC controller. Indicates that an annotated class is a “Controller” is like web controller. Such classes are considered as candidates for auto-detection when using annotation-based configuration and classpath scanning.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Repository&lt;/td&gt;
      &lt;td&gt;Indicates that an annotated class is a “Repository”, originally defined by Domain-Driven Design (Evans, 2003) as “a mechanism for encapsulating storage, retrieval, and search behavior which emulates a collection of objects”.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Service&lt;/td&gt;
      &lt;td&gt;Stereotypes a component as a service. Indicates that an annotated class is a “Service”, originally defined by Domain-Driven Design (Evans, 2003) as “an operation offered as an interface that stands alone in the model, with no encapsulated state.”&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;spring-mvc-annotations&quot;&gt;Spring MVC Annotations&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Application&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@Controller&lt;/td&gt;
      &lt;td&gt;Stereotypes a component as a Spring MVC controller. Indicates that an annotated class is a “Controller” is like web controller. Such classes are considered as candidates for auto-detection when using annotation-based configuration and classpath scanning.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@InitBinder&lt;/td&gt;
      &lt;td&gt;Annotation that identifies methods which initialize the WebDataBinder which will be used for populating command and form object arguments of annotated handler methods.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ModelAttribute&lt;/td&gt;
      &lt;td&gt;When applied to a method, used to preload the model with the value returned from the method. When applied to a parameter, binds a model attribute to the parameter.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@RequestMapping&lt;/td&gt;
      &lt;td&gt;Maps a URL pattern and/or HTTP method to a method or controller type.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@RequestParam&lt;/td&gt;
      &lt;td&gt;Binds a request parameter to a method parameter.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@SessionAttributes&lt;/td&gt;
      &lt;td&gt;Specifies that a model attribute should be stored in the session.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;transaction-annotations&quot;&gt;Transaction Annotations&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Application&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@Transactional&lt;/td&gt;
      &lt;td&gt;Declares transactional boundaries and rules on a bean and/or its methods.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The &lt;strong&gt;@Transactional&lt;/strong&gt; annotation is used along with the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;tx:annotation-driven&amp;gt;&lt;/code&gt; element to declare transactional boundaries and rules as class and method metadata in Java. Declaring bean methods and properties as MBean operations and attributes is supported under JMX Annotations.&lt;/p&gt;

&lt;h4 id=&quot;jmx-annotations&quot;&gt;JMX Annotations&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Application&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@ManagedAttribute&lt;/td&gt;
      &lt;td&gt;Used on a setter or getter method to indicate that the bean’s property should be exposed as a MBean attribute.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ManagedNotification&lt;/td&gt;
      &lt;td&gt;Indicates a JMX notification emitted by a bean.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ManagedNotifications&lt;/td&gt;
      &lt;td&gt;Indicates the JMX notifications emitted by a bean.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ManagedOperation&lt;/td&gt;
      &lt;td&gt;Specifies that a method should be exposed as a MBean operation.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ManagedOperationParameter&lt;/td&gt;
      &lt;td&gt;Used to provide a description for an operation parameter.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ManagedOperationParameters&lt;/td&gt;
      &lt;td&gt;Provides descriptions for one or more operation parameters.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ManagedResource&lt;/td&gt;
      &lt;td&gt;Specifies that all instances of a class should be exposed a MBeans.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;These annotations, used with the &lt;context:mbean-export&gt; element, declare bean methods and properties as MBean operations and attributes.&lt;/context:mbean-export&gt;&lt;/p&gt;

&lt;h3 id=&quot;aspect-annotations&quot;&gt;Aspect Annotations&lt;/h3&gt;
&lt;p&gt;AOP (Aspect Oriented Programming) in spring leverages the set of annotations provided by AspectJ. 
AspectJ annotations defined for Spring aspects will be defined in the context of Spring AOP and will not be handled by the AspectJ runtime, rather they get bound by byte code weaving at compile time.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Application&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@Aspect&lt;/td&gt;
      &lt;td&gt;Declares a class to be an aspect.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@After&lt;/td&gt;
      &lt;td&gt;Declares a method to be called after a pointcut completes.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@AfterReturning&lt;/td&gt;
      &lt;td&gt;Declares a method to be called after a pointcut returns successfully.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@AfterThrowing&lt;/td&gt;
      &lt;td&gt;Declares a method to be called after a pointcut throws an exception.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Around&lt;/td&gt;
      &lt;td&gt;Declares a method that will wrap the pointcut.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Before&lt;/td&gt;
      &lt;td&gt;Declares a method to be called before proceeding to the pointcut.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@DeclareParents&lt;/td&gt;
      &lt;td&gt;Declares that matching types should be given new parents,that is, it introduces new functionality into matching types.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Pointcut&lt;/td&gt;
      &lt;td&gt;Declares an empty method as a pointcut placeholder method.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;jsr-250-annotations&quot;&gt;JSR-250 Annotations&lt;/h3&gt;
&lt;p&gt;Spring’s own set of annotations, Spring also supports a few of the annotations defined by JSR-250, which is the basis for the annotations used in EJB 3`&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Application&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@PostConstruct&lt;/td&gt;
      &lt;td&gt;Indicates a method to be invoked after a bean has been created and dependency injection is complete. Used to perform any initialization work necessary.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@PreDestroy&lt;/td&gt;
      &lt;td&gt;Indicates a method to be invoked just before a bean is removed from the Spring context. Used to perform any cleanup work necessary.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Resource&lt;/td&gt;
      &lt;td&gt;Indicates that a method or field should be injected with a named resource (by default, another bean).&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;testing-annotations&quot;&gt;Testing Annotations&lt;/h4&gt;

&lt;p&gt;These annotations are useful for creating unit tests in the JUnit 4 style that depend on Spring beans and/or require a transactional context.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Application&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@AfterTransaction&lt;/td&gt;
      &lt;td&gt;Used to identify a method to be invoked after a transaction has completed.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@BeforeTransaction&lt;/td&gt;
      &lt;td&gt;Used to identify a method to be invoked before a transaction starts.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ContextConfiguration&lt;/td&gt;
      &lt;td&gt;Configures a Spring application context for a test.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@DirtiesContext&lt;/td&gt;
      &lt;td&gt;Indicates that a method dirties the Spring container and thus it must be rebuilt after the test completes.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ExpectedException&lt;/td&gt;
      &lt;td&gt;Indicates that the test method is expected to throw a specific exception. The test will fail if the exception is not thrown.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@IfProfileValue&lt;/td&gt;
      &lt;td&gt;Indicates that the test class or method is enabled for a specific profile configuration.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@NotTransactional&lt;/td&gt;
      &lt;td&gt;Indicates that a test method must not execute in a transactional context.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@ProfileValueSourceConfiguration&lt;/td&gt;
      &lt;td&gt;Identifies an implementation of a profile value source. The absence of this annotation will cause profile values to be loaded from system properties.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Repeat&lt;/td&gt;
      &lt;td&gt;Indicates that the test method must be repeated a specific number of times.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Rollback&lt;/td&gt;
      &lt;td&gt;Specifies whether or not the transaction for the annotated method should be rolled back or not.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@TestExecutionListeners&lt;/td&gt;
      &lt;td&gt;Identifies zero or more test execution listeners for a test class.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Timed&lt;/td&gt;
      &lt;td&gt;Specifies a time limit for the test method. If the test does not complete before the time has expired, the test will fail.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@TransactionConfiguration&lt;/td&gt;
      &lt;td&gt;Configures test classes for transactions, specifying the transaction manager and/or the default rollback rule for all test methods in a test class.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Mon, 15 Aug 2016 22:24:46 +0530</pubDate>
        <link>http://localhost:4000/2016/08/15/Spring-Annotation-Ref/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/08/15/Spring-Annotation-Ref/</guid>
        
        <category>Spring</category>
        
        <category>Annotation</category>
        
        
        <category>blog</category>
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>Blog: 7 Easy Steps to Moving Wordpress site to live server from Local</title>
        <description>&lt;h3 id=&quot;how-to-move-a-wordpress-blog-from-localhost-to-live-server-or-web-server&quot;&gt;How to move a wordpress blog from localhost to live server (or web server).&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Install or Move your wordpress blog to live host in 7 Easy Step&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It always had been a pain for a developer to migrate project from one environment to another and with php and static web site which can’t be bundle it like war, dll and exe.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;3 years back I use to be a freelance web developer, primarily working with wordpress. When I use complete project and hand it over to client I have sit long hour and support them over remote and phone to make there site live and client don’t want to share there live credential with a freelance(why would they anyway). Then wrote this post and use to give them this doc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now there are better way to do this like docker and other. But with small business manually migrating website is the only way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1.&lt;/strong&gt; At your hosting server install wordpress. I am using my cpanel godady.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-r2oW-oHPnZE/U8DATkxFmPI/AAAAAAAAAVs/5KZ18fFDtsM/s1600/web_host_wp.png&quot; alt=&quot;Click on wordpress and follow simple steps to installs&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Now wordpress ready with default theme and with Hello Post.&lt;!--more--&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Step 2.&lt;/strong&gt; Go to your local database or database client in my case I am using &lt;strong&gt;phpMyAdmin&lt;/strong&gt; to connect my database. Then Select your wordpress database and select export option. And you will get a SQL script file like &lt;strong&gt;your_database_name.sql&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-lPjT3eGDxYw/U8DNUyos54I/AAAAAAAAAWY/3Ej2KHjvD4k/s1600/local_db_Export.png&quot; alt=&quot;Click on export tab select Quick option and hit go.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3.&lt;/strong&gt; Now open the sql file in any of your preferred text editor I am using &lt;strong&gt;SciTE&lt;/strong&gt; but even Notepad will work then open &lt;strong&gt;find and replace&lt;/strong&gt; and replace all localhost address to your site address.
Like in this case &lt;strong&gt;http://localhost/sam&lt;/strong&gt; to &lt;strong&gt;http://www.get24sevensupport.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-wKgkq6jNh1Q/U8DNUUh1MHI/AAAAAAAAAWU/Uh3_-I-3RjM/s1600/db_url_replace.png&quot; alt=&quot;Click Replace All&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4.&lt;/strong&gt; Go to hosting database and select all wordpress table by Check All checkbox then select Drop option from the dropdown menu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-YMvl-k8-8eY/U8DNV8NCDuI/AAAAAAAAAWs/kYizWre9jAs/s1600/prod_db.png&quot; alt=&quot;Check all the wordpress table and select drop.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5.&lt;/strong&gt; A confirmation screen will appear onto your with name (or drop table sql) of all the table to drop. then press Yes&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-BfK_bp94h6A/U8DNWKctT1I/AAAAAAAAAWw/4AHOsEG708A/s1600/prod_db_drop.png&quot; alt=&quot;Click Yes&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;All of your wordpress data is moved. Now it’s time to move all of media and themes content to live server.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Step 6.&lt;/strong&gt; Now connect to your FTP Account via a FTP Client your can use any client you like I am using &lt;strong&gt;FileZila.&lt;/strong&gt; You can even access your FTP via cpanel’s file manger (if your got one in your cpanel). Open the folder &lt;strong&gt;www&lt;/strong&gt; or &lt;strong&gt;public_html&lt;/strong&gt; and their you will get a folder name wp-content. Now delete that folder and upload your local &lt;strong&gt;wp-content&lt;/strong&gt; folder to web host.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note: With FileZila delete wp-content on the right and drag and drop wp-content from left to right.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-1NV-moJ6pIQ/U8DNUmnGEiI/AAAAAAAAAWc/b49-zBvEK2A/s1600/fillzila_wp.png&quot; alt=&quot;Delete wp-content on the right and drag and drop wp-content from left to right.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7.&lt;/strong&gt; Now got to your browser and open your web site and your are done.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-FS9z70ts3lk/U8DNZVcX3fI/AAAAAAAAAXI/9d5bRyemwzk/s1600/wp_site_prod.png&quot; alt=&quot;Your are gone live&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For any concern and queries comment below&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 15 Jul 2016 22:24:46 +0530</pubDate>
        <link>http://localhost:4000/blog/wordpress/Moving-Wordpress-to-live-server-from-Local</link>
        <guid isPermaLink="true">http://localhost:4000/blog/wordpress/Moving-Wordpress-to-live-server-from-Local</guid>
        
        <category>wordpress</category>
        
        <category>godady</category>
        
        <category>live</category>
        
        <category>server</category>
        
        <category>local</category>
        
        
        <category>blog</category>
        
        <category>Wordpress</category>
        
      </item>
    
      <item>
        <title>Blog: Python3 vs Python2</title>
        <description>&lt;p&gt;Python is general-purpose dynamic programming language desgined by Guido van Rossum. 
Which support multiple programming paradigm like object oriented, imperative, functional and others but it considered as one of the main stream functional programming language as it extensive use in functional world.
If you are new to python you find people working of different version of python which parallely maintanied.
As now 15 july 2016 there are two different stable vision of python are avaliable. 3.5.2 and 2.7.12. 
3.5.2 is not at all compatible with 2.7.12 there are even minor syntax differences. So this we will focus on find the differences between the two favour of python.&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;python-2x-vs-python-3x&quot;&gt;Python 2.x vs. Python 3.x&lt;/h2&gt;
&lt;p&gt;Python comes in two basic flavors these days – Python 2.x (currently
2.7) and Python 3.x (currently 3.3). This is an important difference –
some code written for one won’t run on the other. However, most code is
interchangeable. Here are some of the key differences:&lt;/p&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Python 2.x&lt;/th&gt;
            &lt;th&gt;Python 3.x&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;print “hello” (print is a keyword)&lt;/td&gt;
            &lt;td&gt;print(“hello”) (print is a function)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;except Exception, e: # OR except Exception as e &lt;/td&gt;
            &lt;td&gt;except Exception as e: # ONLY&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Naming of Libraries and APIs are frequently inconsistent with PEP 8&lt;/td&gt;
            &lt;td&gt;Improved (but still imperfect) consistency with PEP 8 guidelines&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Strings and unicode&lt;/td&gt;
            &lt;td&gt;Strings are all unicode and bytes type is for unencoded 8 bit values&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;There is a utility called 2to3.py that you can use to convert Python 2.x
code to 3.x, while the ‘-3’ command line switch in 2.x enables additional
deprecation warnings for cases the automated converter cannot handle.
Third party tools like python-modernize and the ‘six’ support package
make it easy to target the large common subset of the two variants for
libraries and applications which support both 2.x and 3.x.&lt;/p&gt;

&lt;p&gt;Below are the few which show comprehensive review difference between Python2 and Python3&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/9nJWPY&quot; target=&quot;_blank&quot;&gt;Python2orPython3 - Python Wiki&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://goo.gl/tI1dfd&quot; target=&quot;_blank&quot;&gt;Python 2 vs Python 3: Which Should I Learn?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://goo.gl/sqDvNw&quot; target=&quot;_blank&quot;&gt;The key differences between Python 2.7.x and Python 3.x with examples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/7B7Wop&quot; target=&quot;_blank&quot;&gt;Python 2 vs. Python 3: How to Choose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 15 Jul 2016 22:24:46 +0530</pubDate>
        <link>http://localhost:4000/2016/07/15/Python3-Vs-Python2/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/07/15/Python3-Vs-Python2/</guid>
        
        <category>Python2</category>
        
        <category>Python3</category>
        
        
        <category>blog</category>
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>Blog: Era of JVM language</title>
        <description>&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt; is computer programming language with multi-paradigm of programming
&lt;em&gt;Object-oriented, structured, imperative,  concurrent and others&lt;/em&gt; desgined and 
created by James Glosling and his team at Sun microsystems. Released in 1995
with its promised &lt;em&gt;“Write Once, Run Anywhere”&lt;/em&gt; now after 21 years of initial 
reslease in 2016 Java is one of the most popular programming languages in use
particularly for client-server web applications, with a reported 9 million developers.&lt;!--more--&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Index is an indicator of the popularity of programming language for May 2016&lt;/strong&gt;
&lt;img src=&quot;https://docs.google.com/drawings/d/11df4bNfMyxqwLgu0GEYgN-0LmgChS5cPNvmMzRrth6A/pub?w=1415&amp;amp;h=620&quot; alt=&quot;Programming Community index is an indicator of the popularity of programming language for May 2016&quot; /&gt;
source : tiobe.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--
&lt;div class=&quot;image-section&quot;&gt;
    &lt;img src=&quot;https://docs.google.com/drawings/d/11df4bNfMyxqwLgu0GEYgN-0LmgChS5cPNvmMzRrth6A/pub?w=1415&amp;h=620&quot; 
    alt=&quot;Programming Community index is an indicator of the popularity of programming language for May 2016&quot;&gt;
    &lt;em class=&quot;cation&quot;&gt;source : tiobe.com&lt;/em&gt;
&lt;/div&gt;
--&gt;

&lt;h2 id=&quot;java-to-run-on-jvm&quot;&gt;Java to run on JVM&lt;/h2&gt;

&lt;p&gt;The language java run on vitual machine not on OS directly which is called the JVM (Java Vitual Machine)
and that make the java so reliable, robus, platform independent language.
For a long time java has be only language which run on JVM because the jvm was 
desgined to work java not the other way around. So any computer programming language
that complie a program or a pieces of code that can run on JVM (Java Vitual Machine) is 
a JVM language.&lt;/p&gt;

&lt;h2 id=&quot;alternative-languages-for-the-jvm&quot;&gt;Alternative Languages for the JVM&lt;/h2&gt;

&lt;p&gt;Java is the primary programming language for JVM. So how these are alternative 
languages for jvm work some of them are interpreted by java program and some are
complie to Java bytecode and JIT during execution as regular java programs to impove 
performance. Some jvm language are Clojure, Groovy, Scala, Kotin, Xtend, Ceylon, 
JRuby, Jython and many more. for this we talk JRuby and Jython as they are implements
for Ruby and Python. These language has there own benefits and feature over java 
and even different programming paradigm then java. And these language are even large 
scala in production apps Like Linkedin and twitter. These language has very lucrative 
turnaround time as per productivity and performance. Scala is one of the heavily use 
language in concurrent apps as it boost huge performance impact then java and also 
considerable very small code base for the same app in java.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;A Month of JVM languages: Groovy, Ceylon, Kotlin and Scala&lt;/strong&gt; &lt;br /&gt;
&lt;em&gt;Post at zeroturnaround.com [https://goo.gl/PvwzJ4]&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://docs.google.com/drawings/d/1_O6FsmWLlU3Dv49GnZsdsWe2_G4__dci6wBnTYJCS7A/pub?w=957&amp;amp;h=676&quot; alt=&quot;The next JVM Language to learn&quot; /&gt;
Image Source : zeroturnaround.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;scala&quot;&gt;Scala&lt;/h3&gt;

&lt;p&gt;Scala is a statically typed programming language that fuses the object-oriented model and functional programming ideas.
It is desgined by Martin Odersky around 2001 released 2003. &lt;br /&gt;
&lt;strong&gt;Compilation :&lt;/strong&gt; Bytecode, and JIT compiled&lt;br /&gt;
&lt;strong&gt;Language type system :&lt;/strong&gt; Strong&lt;br /&gt;
&lt;strong&gt;Binding :&lt;/strong&gt; Late, reflective&lt;br /&gt;
&lt;strong&gt;Feature focus :&lt;/strong&gt; pattern matching &lt;br /&gt;
 &lt;strong&gt;Support by :&lt;/strong&gt; Lightbend Inc. (formerly Typesafe Inc.) / Scala Solutions&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;groovy&quot;&gt;Groovy&lt;/h3&gt;

&lt;p&gt;Groovy is an object-oriented programming language much like Java, but meant to be used as scripting language to the Java platform with a dynamic-language feature set.
It is designed by James Strachan in 2003 &lt;br /&gt;
&lt;strong&gt;Compilation :&lt;/strong&gt; Bytecode, and JIT compiled &lt;br /&gt;
&lt;strong&gt;Language type system :&lt;/strong&gt; Strong, supports both static and dynamic typing &lt;br /&gt;
&lt;strong&gt;Binding :&lt;/strong&gt; Late, reflective &lt;br /&gt;
&lt;strong&gt;Feature focus :&lt;/strong&gt; safe navigation &lt;br /&gt;
&lt;strong&gt;Support by :&lt;/strong&gt; Community-based &lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;clojure&quot;&gt;Clojure&lt;/h3&gt;

&lt;p&gt;Clojure is a dynamically typed programming language that can be seen as a modern take on Lisp. It is radically different from what object-oriented programmers might be used to
It is created by Rich Hickey in 2007&lt;br /&gt;
&lt;strong&gt;Compilation :&lt;/strong&gt; Bytecode, and JIT compiled&lt;br /&gt;
&lt;strong&gt;Language type system :&lt;/strong&gt; Strong, dynamic&lt;br /&gt;
&lt;strong&gt;Binding :&lt;/strong&gt; Late, reflective&lt;br /&gt;
&lt;strong&gt;Feature focus :&lt;/strong&gt; homoiconicity&lt;br /&gt;
&lt;strong&gt;Support by :&lt;/strong&gt; Community-based&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;kotlin&quot;&gt;Kotlin&lt;/h3&gt;

&lt;p&gt;Kotlin is a statically typed object-oriented language. Its main design goals are to be compatible with Java’s API, have a type system that catches more errors at compile time, and be less verbose than Java. Kotlin’s designers say that Scala is a close choice to match its design goals, but they dislike Scala’s complexity and long compilation time compared to Java. Kotlin aims to tackle these issues.
It is desgined by JetBrains, developed JetBrains and open source contributors and created in 2011. &lt;br /&gt;
&lt;strong&gt;Compilation :&lt;/strong&gt; Compiles to JavaScript or Java bytecode, JIT compiled &lt;br /&gt;
&lt;strong&gt;Language type system :&lt;/strong&gt; Strong, static &lt;br /&gt;
&lt;strong&gt;Binding :&lt;/strong&gt; Early &lt;br /&gt;
&lt;strong&gt;Feature focus :&lt;/strong&gt; smart casts &lt;br /&gt;
&lt;strong&gt;Support by :&lt;/strong&gt; JetBrains Inc. &lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ceylon&quot;&gt;Ceylon&lt;/h3&gt;

&lt;p&gt;Ceylon, a statically typed object-oriented language, to give Java programmers a language that’s easy to learn and understand (because of syntax that’s similar to Java) but less verbose. Ceylon includes more type system features than Java.
It is desgined by Gavin King, Red Hat in 2011. &lt;br /&gt;
&lt;strong&gt;Compilation :&lt;/strong&gt; Compiles to JavaScript or Java bytecode, JIT compiled &lt;br /&gt;
&lt;strong&gt;Language type system :&lt;/strong&gt; Static, strong &lt;br /&gt;
&lt;strong&gt;Binding :&lt;/strong&gt; Early &lt;br /&gt;
&lt;strong&gt;Feature focus :&lt;/strong&gt; for comprehensions. &lt;br /&gt;
&lt;strong&gt;Support by :&lt;/strong&gt; Red Hat &lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;xtend&quot;&gt;Xtend&lt;/h3&gt;

&lt;p&gt;Xtend is a statically typed object-oriented language. One way it differs from other languages is that it compiles to pretty-printed Java code rather than bytecode. As a result, you can also work with the generated code.
It is desgined by Sven Efftinge, Sebastian Zarnekow in 2011.
&lt;strong&gt;Compilation :&lt;/strong&gt; Bytecode, and JIT compiled. &lt;br /&gt;
&lt;strong&gt;Language type system :&lt;/strong&gt; Static, strong, inferred. &lt;br /&gt;
&lt;strong&gt;Binding :&lt;/strong&gt; Early. &lt;br /&gt;
&lt;strong&gt;Feature focus :&lt;/strong&gt; active annotations. &lt;br /&gt;
&lt;strong&gt;Support by :&lt;/strong&gt; itemis. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;There more languages which very high productivity and performance There &lt;strong&gt;Gosu&lt;/strong&gt; by Guidewire Software Inc. / Community and &lt;strong&gt;Rhino&lt;/strong&gt; Mozilla Foundation in 1997 now support by mozilla / oracle / community&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gosu&lt;/strong&gt; borrows concepts from other languages, such as Ruby, Java, and C#, and is mainly used as a scripting language within other JVM software systems. However, Gosu has some innovative, very interesting features such as the Open Type System, which allows it to be easily extended for compile-time type checking, and its use of XML and XSL as native types. Its syntax is compact and concise, lending to its simplicity&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rhino&lt;/strong&gt; is a JavaScript engine, bundled as part of Java SE, which executes JavaScript code and allows for interoperability with Java code. The engine works in either interpreted or compiled mode, and is meant to execute server-side JavaScript code as part of an enterprise application solution.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Other information and references links&lt;/strong&gt;&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://goo.gl/eOrx01&quot; target=&quot;_blank&quot;&gt;Why Should I Learn Scala?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://goo.gl/PvwzJ4&quot; target=&quot;_blank&quot;&gt;A Month of JVM languages: Groovy, Ceylon, Kotlin and Scala&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://goo.gl/IeWOB3&quot; target=&quot;_blank&quot;&gt;Alternative Languages for the JVM&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please do comment and share.&lt;/p&gt;

</description>
        <pubDate>Sun, 22 May 2016 22:24:46 +0530</pubDate>
        <link>http://localhost:4000/2016/05/22/JVM-Lang-era/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/05/22/JVM-Lang-era/</guid>
        
        <category>JVM</category>
        
        <category>Language</category>
        
        
        <category>blog</category>
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>Blog: Creating Immutable Class</title>
        <description>&lt;h2 id=&quot;how-to-create-immutable-class&quot;&gt;How to create immutable class&lt;/h2&gt;

&lt;p&gt;Immutable Classes are those who’s object once created it can’t be change (or value can’t change).
So to create Immutable Class in java there are some simple that are listed below.&lt;/p&gt;

&lt;h3 id=&quot;rules-for-immutable-class&quot;&gt;Rules for immutable class:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;No setter should provide for the field.&lt;/li&gt;
  &lt;li&gt;All field should be final and private.&lt;/li&gt;
  &lt;li&gt;Make the class final as an immutable class should not be inherited or an another for this could be to make the constructor private and construct instances in factory methods.&lt;/li&gt;
  &lt;li&gt;If there is any field which is a references to mutable objects make sure that it should not be modified :
    &lt;ul&gt;
      &lt;li&gt;Don’t provide methods that modify the mutable objects.&lt;/li&gt;
      &lt;li&gt;Don’t share references to the mutable objects. Always create a copy of the object and provide that for any operation.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;sample-of-immutable-class&quot;&gt;Sample of Immutable Class&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Date&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ImmutableSample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Is value type &lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Is Immutable&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Is mutable&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ImmutableSample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stringField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dateField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ImmutableSample&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ImmutableSample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fld1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fld2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//Provide no setter methods&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
    * int is value type variable, So the value in intField going change every 
    * */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getIntField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
    * String class is also immutable so we can return the instance variable as it is
    * */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getStringField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
    * As Date field is mutable so we create a copy of dateField. So that modification will not effect dateField.
    * */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDateField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; - &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; - &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;some-advantage-of-immutable-object&quot;&gt;Some advantage of Immutable Object&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;They are thread-safe so don’t have and synchronization issues.&lt;/li&gt;
  &lt;li&gt;They can be best use in Map’s key and Set’s element.&lt;/li&gt;
  &lt;li&gt;It easier to parallelize your program as there are no conflicts among immutable objects.&lt;/li&gt;
  &lt;li&gt;They have their class invariant established once upon construction, and it never needs to be checked again&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please do comment and suggest&lt;/p&gt;
</description>
        <pubDate>Mon, 16 May 2016 22:24:46 +0530</pubDate>
        <link>http://localhost:4000/2016/05/16/Creating-Immutable-class/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/05/16/Creating-Immutable-class/</guid>
        
        <category>Java</category>
        
        <category>immutable</category>
        
        
        <category>blog</category>
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>Blog: Hello World With Mustache.java</title>
        <description>&lt;h2 id=&quot;simple-of-templating-by-mustachejava&quot;&gt;Simple of Templating by mustache.java&lt;/h2&gt;

&lt;p&gt;Mustache.js is very popular templating js for web. Today we going to look at java version of mustache.&lt;/p&gt;

&lt;p&gt;So for getting started we need a file which will act like a template for our program. 
For this we a file &lt;strong&gt;template.mustache&lt;/strong&gt; which is simple text for a mail with some place holder in mustache syntax.&lt;!--more--&gt;&lt;/p&gt;

&lt;h4 id=&quot;templatemustache&quot;&gt;template.mustache&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hi {{name}},

Your Account number {{accountNo}} mapped with your aardhar card no. {{ uuid}}
Is {{status}}. Thank you for your assistance.
}}
Congrat!!! Now Enjoy the benefits...
{{/isPassed}}
{{#isFailed}}
Sorry !!! Please try agian
{{/isFailed}}

Thank You
{{sender}}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now when we have our template file ready. we going to use this file a template publish mail to a person in java. And just for now it is going to print it in console because this example is just to give an idea about mustache.java more comprehensive mustache will be covered in later post.&lt;/p&gt;

&lt;h4 id=&quot;testmushachejava&quot;&gt;TestMushache.java&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestMushache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
     
                 &lt;span class=&quot;n&quot;&gt;MustacheFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultMustacheFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;Mustache&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mustache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;template.mustache&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
             &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;TestName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;accountNo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123679&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;uuid&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;101010-101010-10101-0420&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Failed because invalid information&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;isPassed&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;isFailed&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sender&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Test Sender&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
             &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;mustache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrintWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;output&quot;&gt;Output&lt;/h3&gt;

&lt;p&gt;The following is output on the console&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hi TestName,

Your Account number 123679 mapped with your aardhar card no. 101010-101010-10101-0420
Is Failed because invalid information. Thank you for your assistance.


Sorry !!! Please try agian


Thank You
Test Sender
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;maven&quot;&gt;Maven&lt;/h3&gt;

&lt;p&gt;To download jar for the mustache you vist this link.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mvnrepository.com/artifact/com.github.spullara.mustache.java/compiler/0.9.2&quot; target=&quot;_blank&quot;&gt;
    https://mvnrepository.com/artifact/com.github.spullara.mustache.java/compiler/0.9.2
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the maven dependency is followed below.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.github.spullara.mustache.java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;compiler&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.9.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Please do comment and share the post.&lt;/p&gt;
</description>
        <pubDate>Sat, 07 May 2016 22:24:46 +0530</pubDate>
        <link>http://localhost:4000/2016/05/07/Hello-World-With-Mustache/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/05/07/Hello-World-With-Mustache/</guid>
        
        <category>Java</category>
        
        <category>Mustache</category>
        
        
        <category>blog</category>
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>Blog: Builder pattern for creating object</title>
        <description>&lt;p&gt;There are number of creational patterns which are use to create instances of class, but were builder pattern fit in and stand out from other creational pattern like static factory, telescoping constructor, javabean pattern and other’s. Is its ability to scale with a large number of parameters. So let’s get started with an example.&lt;/p&gt;

&lt;p&gt;Let’s consider a case where we have to create object of a Product class with several field like name, description, sellPrice, costPrice, maxRetailPrice, discount and brand. For selling a product name, sellPrice and description are mandatory field, a product object is incomplete without these three information.So we are going to implement builder pattern in this case to incur the problem.&lt;/p&gt;

&lt;p&gt;Instead of making the desired object directly, the client calls a constructor (or static factory) with all of the required parameters and gets a builder object. Then the client calls setter-like methods on the builder object to set each optional parameter of interest. Finally, the client calls a parameterless build method to generate the object, which is immutable. The builder is a static member class of the class it builds.&lt;!--more--&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dgstack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;creation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;costPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxRetialPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//mandatory field&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//option field&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;costPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxRetialPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sellPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;brand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;brand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;costPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;costPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;costPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;costPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;maxRetialPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxRetialPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxRetialPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxRetialPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;discount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;brand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;brand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sellPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sellPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;costPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;costPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxRetialPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxRetialPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;discount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we look at client code (or calling code).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BuilderClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;builderClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/**  Some Code */&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;//fill in the required field&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt; 
            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;iPhone5&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;iPhone 5C&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;499.90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;//chaining is done as it return itself&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;brand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;apple&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxRetialPrice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;699.99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;// building the immutable object of product iphone&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iPhone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
        
        &lt;span class=&quot;cm&quot;&gt;/*** Some Code that use iPhone object*/&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For more in on the topic refer to :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Design Patterns: Elements of Reusable Object-Oriented Software aka Gang of Four (GOF).&lt;/li&gt;
  &lt;li&gt;Effective Java by Joshua Bloch&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 08 Mar 2016 22:24:46 +0530</pubDate>
        <link>http://localhost:4000/2016/03/08/builder-pattern-for-creating-object/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/03/08/builder-pattern-for-creating-object/</guid>
        
        <category>Builder Pattern</category>
        
        <category>Java</category>
        
        
        <category>blog</category>
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>Blog: Zen of Python (PEP 20)</title>
        <description>&lt;p&gt;PEP(Python Enhancement Proposal)-20 is the Zen of Python. Written by
long time Python developer Tim Peters, the Zen is acknowledged as the
core philosophy of Python. In fact, it is always accessible in any Python
environment by using import this: &lt;!--more--&gt;&lt;/p&gt;

&lt;center style=&quot;font-weight: bold; font-style: italic;font-family: 'Abril Fatface, serif;&quot;&gt;
Beautiful is better than ugly.&lt;br /&gt;
Explicit is better than implicit.&lt;br /&gt;
Simple is better than complex.&lt;br /&gt;
Complex is better than complicated.&lt;br /&gt;
Flat is better than nested.&lt;br /&gt;
Sparse is better than dense.&lt;br /&gt;
Readability counts.&lt;br /&gt;
Special cases aren’t special enough to break the rules.&lt;br /&gt;
Although practicality beats purity.&lt;br /&gt;
Errors should never pass silently.&lt;br /&gt;
Unless explicitly silenced.&lt;br /&gt;
In the face of ambiguity, refuse the temptation to guess.&lt;br /&gt;
There should be one -and preferably only&lt;br /&gt;
one -obvious way to do it.&lt;br /&gt;
Although that way may not be obvious at first&lt;br /&gt;
unless you’re Dutch.&lt;br /&gt;
Now is better than never.&lt;br /&gt;
Although never is often better than *right* now.&lt;br /&gt;
If the implementation is hard to explain, it’s a bad idea.&lt;br /&gt;
If the implementation is easy to explain, it may be a good idea.&lt;br /&gt;
Namespaces are one honking great idea -- let’s do more of those!
&lt;/center&gt;

&lt;h2 id=&quot;what-is-pep&quot;&gt;What is PEP?&lt;/h2&gt;

&lt;p&gt;Python’s development is conducted largely through the Python Enhancement Proposal (PEP) process. The PEP process is the primary mechanism for proposing major new features, for collecting community input on an issue, and for documenting the design decisions that have gone into Python. Outstanding PEPs are reviewed and commented upon by the Python community and by Van Rossum, the Python project’s benevolent dictator for life.&lt;/p&gt;

&lt;h2 id=&quot;pep-8---the-python-style-guide&quot;&gt;PEP-8 - the Python style guide&lt;/h2&gt;
&lt;p&gt;Python has its own style guide known as PEP8 that outlines various
guidelines that are good to follow. In fact, you must follow them if you plan
to contribute to Python Core. PEP 8 specifies such things as indentation
amount, maximum line length, docstrings, whitespace, naming
conventions, etc.&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Dec 2015 22:24:46 +0530</pubDate>
        <link>http://localhost:4000/2015/12/23/Zen-Of-Python/</link>
        <guid isPermaLink="true">http://localhost:4000/2015/12/23/Zen-Of-Python/</guid>
        
        <category>Python</category>
        
        <category>PEP</category>
        
        
        <category>blog</category>
        
        <category>Python</category>
        
      </item>
    
  </channel>
</rss>
